
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "NUMBER PRINT VARIABLEprogram : statementsstatements : statements statement\n                  | statement statement : assignment\n                  | operation\n                  | printassignment : VARIABLE '=' NUMBERoperation : VARIABLE '=' expression expression : expression '+' term\n                  | expression '-' term\n                  | termterm : term '*' VARIABLE\n            | term '/' VARIABLEterm : term '*' NUMBER\n            | term '/' NUMBERterm : NUMBERterm : VARIABLEprint : PRINT '(' variable_s ')' variable_s : variable_s ',' VARIABLE\n                 | VARIABLE"
    
_lr_action_items = {')':([12,13,24,],[-20,18,-19,]),'(':([3,],[10,]),'+':([14,15,16,17,25,26,27,28,29,30,31,],[-11,-16,-17,22,-12,-14,-13,-15,-9,-16,-10,]),'*':([14,15,16,25,26,27,28,29,30,31,],[20,-16,-17,-12,-14,-13,-15,20,-16,20,]),'-':([14,15,16,17,25,26,27,28,29,30,31,],[-11,-16,-17,23,-12,-14,-13,-15,-9,-16,-10,]),'NUMBER':([11,20,21,22,23,],[15,26,28,30,30,]),'/':([14,15,16,25,26,27,28,29,30,31,],[21,-16,-17,-12,-14,-13,-15,21,-16,21,]),',':([12,13,24,],[-20,19,-19,]),'PRINT':([0,1,2,6,7,8,9,14,15,16,17,18,25,26,27,28,29,30,31,],[3,3,-4,-3,-6,-5,-2,-11,-7,-17,-8,-18,-12,-14,-13,-15,-9,-16,-10,]),'VARIABLE':([0,1,2,6,7,8,9,10,11,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,],[4,4,-4,-3,-6,-5,-2,12,16,-11,-7,-17,-8,-18,24,25,27,16,16,-12,-14,-13,-15,-9,-16,-10,]),'=':([4,],[11,]),'$end':([1,2,5,6,7,8,9,14,15,16,17,18,25,26,27,28,29,30,31,],[-1,-4,0,-3,-6,-5,-2,-11,-7,-17,-8,-18,-12,-14,-13,-15,-9,-16,-10,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'term':([11,22,23,],[14,29,31,]),'statements':([0,],[1,]),'assignment':([0,1,],[2,2,]),'program':([0,],[5,]),'variable_s':([10,],[13,]),'statement':([0,1,],[6,9,]),'print':([0,1,],[7,7,]),'operation':([0,1,],[8,8,]),'expression':([11,],[17,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','py_yacc.py',16),
  ('statements -> statements statement','statements',2,'p_statements','py_yacc.py',22),
  ('statements -> statement','statements',1,'p_statements','py_yacc.py',23),
  ('statement -> assignment','statement',1,'p_statement','py_yacc.py',33),
  ('statement -> operation','statement',1,'p_statement','py_yacc.py',34),
  ('statement -> print','statement',1,'p_statement','py_yacc.py',35),
  ('assignment -> VARIABLE = NUMBER','assignment',3,'p_assignment','py_yacc.py',41),
  ('operation -> VARIABLE = expression','operation',3,'p_operation','py_yacc.py',49),
  ('expression -> expression + term','expression',3,'p_expression','py_yacc.py',57),
  ('expression -> expression - term','expression',3,'p_expression','py_yacc.py',58),
  ('expression -> term','expression',1,'p_expression','py_yacc.py',59),
  ('term -> term * VARIABLE','term',3,'p_term_1','py_yacc.py',70),
  ('term -> term / VARIABLE','term',3,'p_term_1','py_yacc.py',71),
  ('term -> term * NUMBER','term',3,'p_term_2','py_yacc.py',79),
  ('term -> term / NUMBER','term',3,'p_term_2','py_yacc.py',80),
  ('term -> NUMBER','term',1,'p_term_3','py_yacc.py',88),
  ('term -> VARIABLE','term',1,'p_term_4','py_yacc.py',94),
  ('print -> PRINT ( variable_s )','print',4,'p_print','py_yacc.py',101),
  ('variable_s -> variable_s , VARIABLE','variable_s',3,'p_variable_s','py_yacc.py',110),
  ('variable_s -> VARIABLE','variable_s',1,'p_variable_s','py_yacc.py',111),
]
